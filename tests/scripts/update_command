#!/usr/bin/env python

import os
import requests
import sys

def patch_and_expect(execution_url, patch_data, status_code):
    print "Sending PATCH to %s with body: %s" % (execution_url, patch_data)
    response = requests.patch(execution_url, json=patch_data)
    if (response.status_code != status_code):
        print "Expected status_code %s, but recieved %s instead." % (status_code,
                response.status_code)
        sys.exit(3)
    else:
        return response.json();

def test_inputs_cannot_be_set(execution_url):
    patch_data = {'inputs': {'foo': 'bar'}}
    patch_and_expect(execution_url, patch_data, 409)

def test_outputs_cannot_be_set_more_than_once(execution_url):
    patch_data = {'outputs': {'foo': 'bar'}}
    patch_and_expect(execution_url, patch_data, 409)

def test_status_can_be_set(execution_url):
    patch_data = {'status': 'succeeded'}
    execution_data = patch_and_expect(execution_url, patch_data, 200)
    if (execution_data['status'] != 'succeeded'):
        print "Expected status set to 'succeeded', but it is '%s' instead" % execution_data['status']
        sys.exit(3)

def test_data_can_be_updated(execution_url):
    patch_data = {'data': {'foo': 'bar'}}
    execution_data = patch_and_expect(execution_url, patch_data, 200)
    if (execution_data['data'].get('foo') != 'bar'):
        print "Expected data['foo'] to be 'bar', but it is '%s' instead" % execution_data['data'].get('foo')
        sys.exit(3)

def main():
    execution_url = os.environ['PTERO_WORKFLOW_EXECUTION_URL']
    print "Found PTERO_WORKFLOW_EXECUTION_URL = %s" % execution_url

    execution_data = requests.get(execution_url).json()
    print "Found execution_data from GET request = %s" % execution_data
    inputs = execution_data['inputs']

    patch_data = {'outputs': inputs}
    patch_and_expect(execution_url, patch_data, 200)

    test_inputs_cannot_be_set(execution_url)
    test_outputs_cannot_be_set_more_than_once(execution_url)
    test_status_can_be_set(execution_url)
    test_data_can_be_updated(execution_url)

    sys.exit(os.EX_OK)

if __name__ == "__main__":
    main()
